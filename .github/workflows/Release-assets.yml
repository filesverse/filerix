name: Build and Upload Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and Upload
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            libudev-dev autoconf \
            automake \
            nsis \
            libtool \
            libltdl-dev \
            pkg-config \
            libdbus-1-dev \
            zlib1g-dev \
            mingw-w64* \
            gcc-mingw-w64* \
            g++-mingw-w64* \
            libz-mingw-w64* \
            wine*

      - name: Build and Install
        run: |
          wget -O /tmp/EnVar_plugin.zip "https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip"
          unzip -o /tmp/EnVar_plugin.zip -d /tmp/EnVar_plugin
          sudo rsync -a /tmp/EnVar_plugin/ /usr/share/nsis/
          make install PREFIX=linux/
          make install-win PREFIX=win/
          make install-win32 PREFIX=win32/

      - name: Determine release name
        id: version
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          CLEAN_TAG_NAME="${TAG_NAME#v}"  # Remove leading "v"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "CLEAN_TAG_NAME=$CLEAN_TAG_NAME" >> $GITHUB_ENV

      - name: Package Linux compiled files
        run: |
          cd linux/
          ZIP_NAME="filerix-${CLEAN_TAG_NAME}-linux-x86_64.zip"
          zip -r "../$ZIP_NAME" .
          echo "LINUX_ZIP=$ZIP_NAME" >> $GITHUB_ENV
          cd ..

      - name: Package Windows compiled files
        run: |
          cd win/
          ZIP_NAME="filerix-${CLEAN_TAG_NAME}-windows-x86_64.zip"
          zip -r "../$ZIP_NAME" .
          echo "WINDOWS_ZIP=$ZIP_NAME" >> $GITHUB_ENV
          cd ..

      - name: Package Windows 32 compiled files
        run: |
          cd win32/
          ZIP_NAME="filerix-${CLEAN_TAG_NAME}-windows-x86.zip"
          zip -r "../$ZIP_NAME" .
          echo "WINDOWS32_ZIP=$ZIP_NAME" >> $GITHUB_ENV
          cd ..

      - name: Verify Windows Executable
        run: |
          EXE_PATH="./build-win/filerix-${CLEAN_TAG_NAME}-win64.exe"
          if [[ ! -f "$EXE_PATH" ]]; then
            echo "ERROR: Windows executable not found at $EXE_PATH"
            exit 1
          fi
          echo "EXE_PATH=$EXE_PATH" >> $GITHUB_ENV

      - name: Verify Windows 32 Executable
        run: |
          EXE_PATH="./build-win32/filerix-${CLEAN_TAG_NAME}-win32.exe"
          if [[ ! -f "$EXE_PATH" ]]; then
            echo "ERROR: Windows executable not found at $EXE_PATH"
            exit 1
          fi
          echo "EXE_PATH=$EXE_PATH" >> $GITHUB_ENV

      - name: Upload ZIP Archives
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.LINUX_ZIP }}
            ${{ env.WINDOWS_ZIP }}
            ${{ env.WINDOWS32_ZIP }}
            ${{ env.EXE_PATH }}
            ${{ env.EXE32_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
